server {
		  listen 443;	
          # listen 443 ssl http2;
          server_name  api.vv726.top ;

          ssl on;
          ssl_certificate /root/ssl/api.vv726.top/Nginx/1_api.vv726.top_bundle.crt;
          ssl_certificate_key /root/ssl/api.vv726.top/Nginx/2_api.vv726.top.key;
          ssl_session_timeout 5m;
          ssl_protocols SSLv3 TLSv1 ; #按照这个协议配置 #TLSv1.1 TLSv1.2 无法配置成功
          ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;#按照这个套件配置
          ssl_prefer_server_ciphers on;

          # 开启gzip
          gzip on;
          # 启用gzip压缩的最小文件，小于设置值的文件将不会压缩
          gzip_min_length 1k;
          # gzip 压缩级别，1-10，数字越大压缩的越好，也越占用CPU时间，后面会有详细说明
          gzip_comp_level 9;
          # 进行压缩的文件类型。javascript有多种形式。其中的值可以在 mime.types 文件中找到。
          gzip_types text/plain application/javascript application/x-javascript text  css application/xml text/javascript application/x-httpd-php image/jpeg  image/gif image/png font/ttf font/otf image/svg+xml;
          # 是否在http header中添加Vary: Accept-Encoding，建议开启
          gzip_vary on;
          # 禁用IE 6 gzip
          gzip_disable "MSIE [1-6]\.";


          

          location / {
                # 设置跨域 ， node设置了，所以这里暂时不用设置
                # set $cors '';
                # if ($http_origin ~* 'https?://www\.vv726\.top|wbbdemo\.com'){
                #         set $cors 'true';
                # }

                # if ($cors = 'true') {
                #     add_header 'Access-Control-Allow-Origin' "$http_origin";
                #     add_header 'Access-Control-Allow-Credentials' 'true';
                #     add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                #     add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Mx-ReqToken,X-Requested-With,X-Test';
                # }

                proxy_set_header Connection "";
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_set_header X-NginX-Proxy true;
                proxy_redirect off;
                proxy_pass http://localhost:9092;
          }
       }

       
server {
          listen 80;
          server_name  api.vv726.top;
          return 301 https://$server_name$request_uri;
       }       